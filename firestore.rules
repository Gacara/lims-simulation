rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Règles pour les utilisateurs
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Règles pour les données de jeu des utilisateurs
    match /userGameData/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Règles pour les laboratoires
    match /laboratories/{laboratoryId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.ownerId ||
         request.auth.uid in resource.data.members[*].userId);
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.ownerId || 
         request.auth.uid == request.resource.data.ownerId);
    }
    
    // Règles pour les échantillons (scopés par laboratoire)
    match /samples/{sampleId} {
      allow read, write: if request.auth != null &&
        exists(/databases/$(database)/documents/laboratories/$(resource.data.laboratoryId)) &&
        (request.auth.uid in get(/databases/$(database)/documents/laboratories/$(resource.data.laboratoryId)).data.members[*].userId);
    }
    
    // Règles pour les missions (scopées par laboratoire)
    match /missions/{missionId} {
      allow read, write: if request.auth != null &&
        exists(/databases/$(database)/documents/laboratories/$(resource.data.laboratoryId)) &&
        (request.auth.uid in get(/databases/$(database)/documents/laboratories/$(resource.data.laboratoryId)).data.members[*].userId);
    }
    
    // Règles pour les analyses
    match /analyses/{analysisId} {
      allow read, write: if request.auth != null;
      // Les analyses peuvent être gérées par tout utilisateur authentifié
    }
    
    // Règles pour les équipements
    match /equipment/{equipmentId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      // Les équipements peuvent être consultés par tous, modifiés par les propriétaires
    }
    
    // Règles pour les achievements (optionnel - si on veut les stocker dans Firestore)
    match /achievements/{achievementId} {
      allow read: if request.auth != null;
      allow write: if false; // Les achievements sont en lecture seule côté client
    }
    
    // Règles pour les classements/leaderboards
    match /leaderboards/{leaderboardId} {
      allow read: if request.auth != null;
      allow write: if false; // Les classements sont calculés côté serveur
    }
  }
}
